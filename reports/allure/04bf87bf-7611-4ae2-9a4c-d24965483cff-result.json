{"name": "test_non_reinscrit_filter", "status": "failed", "statusDetails": {"message": "AssertionError: Not all students have 'Non-réinscrit' label\nassert False\n +  where False = <bound method StudentFilterPage.check_all_students_have_label of <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>>(\"//span[text()='Non-réinscrit']\")\n +    where <bound method StudentFilterPage.check_all_students_have_label of <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>> = <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>.check_all_students_have_label\n +    and   \"//span[text()='Non-réinscrit']\" = <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>.NON_REINSCRIT_LABEL", "trace": "filter_page = <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>\n\n    def test_non_reinscrit_filter(filter_page):\n        \"\"\"Test the 'Non réinscrit' filter functionality\"\"\"\n        # Apply the 'Non réinscrit' filter\n        filter_page.apply_filter(filter_page.NON_REINSCRIT_FILTER)\n    \n        # Verify the filter facet text\n        facet_text = filter_page.get_filter_facet_text()\n        assert facet_text == \"Non réinscrit\", f\"Filter facet text is '{facet_text}' but expected 'Non réinscrit'\"\n    \n        # Verify all students have 'Non-réinscrit' label\n>       assert filter_page.check_all_students_have_label(filter_page.NON_REINSCRIT_LABEL), \"Not all students have 'Non-réinscrit' label\"\nE       AssertionError: Not all students have 'Non-réinscrit' label\nE       assert False\nE        +  where False = <bound method StudentFilterPage.check_all_students_have_label of <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>>(\"//span[text()='Non-réinscrit']\")\nE        +    where <bound method StudentFilterPage.check_all_students_have_label of <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>> = <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>.check_all_students_have_label\nE        +    and   \"//span[text()='Non-réinscrit']\" = <pages.access.school_card.student_filter_page.StudentFilterPage object at 0x000001F505E25210>.NON_REINSCRIT_LABEL\n\ntests\\acces\\test_student_filters.py:44: AssertionError"}, "description": "Test the 'Non réinscrit' filter functionality", "attachments": [{"name": "stdout", "source": "e34b1108-debc-42d7-96a9-04ae9bb656ac-attachment.txt", "type": "text/plain"}], "start": 1747150299149, "stop": 1747150309966, "uuid": "213d59b7-26e8-4a50-ac0c-cec47533e2e3", "historyId": "3f9bed7fc693503adf59d7248360233e", "testCaseId": "3f9bed7fc693503adf59d7248360233e", "fullName": "tests.acces.test_student_filters#test_non_reinscrit_filter", "labels": [{"name": "parentSuite", "value": "tests.acces"}, {"name": "suite", "value": "test_student_filters"}, {"name": "host", "value": "DESKTOP-LKP4IQM"}, {"name": "thread", "value": "19468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.acces.test_student_filters"}]}