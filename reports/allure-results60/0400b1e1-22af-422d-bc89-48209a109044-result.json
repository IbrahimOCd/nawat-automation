{"name": "test_all_classes_filter", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: Unsupported token \"@class\" while parsing selector \".//span[contains(@class,'o_search_panel_label_title text-truncate')]\"", "trace": "class_filter_page = <pages.access.school_card.class_filter_page.ClassFilterPage object at 0x00000201207A6DA0>\n\n    @allure.feature(\"Student Management\")\n    @allure.story(\"Class Filtering\")\n    def test_all_classes_filter(class_filter_page):\n        \"\"\"Test filtering students by all available class levels\"\"\"\n>       class_filter_page.expand_all_items()\n\ntests\\acces\\test_class_filters.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\access\\school_card\\class_filter_page.py:76: in expand_all_items\n    item, title = self.get_sidebar_item(current_index)\npages\\access\\school_card\\class_filter_page.py:53: in get_sidebar_item\n    title_element = item.query_selector(self.ITEM_TITLE)\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:2889: in query_selector\n    self._sync(self._impl_obj.query_selector(selector=selector))\nvenv\\lib\\site-packages\\playwright\\_impl\\_element_handle.py:315: in query_selector\n    await self._channel.send(\"querySelector\", dict(selector=selector))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:461: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x000002012077A1A0>\nmethod = 'querySelector'\nparams = {'selector': \".//span[contains(@class,'o_search_panel_label_title text-truncate')]\"}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.Error: Unsupported token \"@class\" while parsing selector \".//span[contains(@class,'o_search_panel_label_title text-truncate')]\"\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:96: Error"}, "description": "Test filtering students by all available class levels", "start": 1747757553328, "stop": 1747757553754, "uuid": "6b1d56a6-abe1-43ec-aa6b-da3ce84c28ba", "historyId": "3da7e31da9be5c62f5a4ef8d202e69e7", "testCaseId": "3da7e31da9be5c62f5a4ef8d202e69e7", "fullName": "tests.acces.test_class_filters#test_all_classes_filter", "labels": [{"name": "story", "value": "Class Filtering"}, {"name": "feature", "value": "Student Management"}, {"name": "parentSuite", "value": "tests.acces"}, {"name": "suite", "value": "test_class_filters"}, {"name": "host", "value": "DESKTOP-LKP4IQM"}, {"name": "thread", "value": "16820-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.acces.test_class_filters"}]}