{"name": "test_all_classes_filter", "status": "failed", "statusDetails": {"message": "AssertionError: No classes were tested\nassert 0 > 0\n +  where 0 = len([])", "trace": "class_filter_page = <pages.access.school_card.class_filter_page.ClassFilterPage object at 0x000002C2E132CFD0>\n\n    @allure.feature(\"Student Management\")\n    @allure.story(\"Class Filtering\")\n    def test_all_classes_filter(class_filter_page):\n        \"\"\"Test filtering students by all available class levels\"\"\"\n        class_filter_page.expand_all_items()\n        class_filter_page.wait_for_page_loaded()\n    \n        classes_tested = []\n        classes_with_students = []\n        classes_without_students = []\n        classes_with_mismatches = []\n    \n        current_index = 1\n    \n        while True:\n            item, title = class_filter_page.get_sidebar_item(current_index)\n            if not item:\n                break\n    \n            if class_filter_page.is_class_item(title):\n                class_filter_page.click_sidebar_item(item, title)\n                classes_tested.append(title)\n                class_filter_page.wait_for_page_loaded()\n    \n                if class_filter_page.has_students():\n                    classes_with_students.append(title)\n                    success, details = class_filter_page.verify_students_match_class(title)\n    \n                    if not success:\n                        classes_with_mismatches.append((title, details['mismatched_students']))\n                else:\n                    classes_without_students.append(title)\n    \n            current_index += 1\n    \n        mismatched_summary = \"\\n\".join([f\"\\nClass: {class_name}\\n\" +\n                                        \"\\n\".join([f\"- {s['name']} (ID:{s['id']}) - Expected: {s['expected_class']}, Actual: {s['actual_class']}\" for s in mismatches])\n                                        for class_name, mismatches in classes_with_mismatches])\n    \n        summary = (f\"TEST SUMMARY\\n\\n\" +\n                  f\"Classes Tested ({len(classes_tested)}):\\n\" +\n                  f\"- {', '.join(classes_tested)}\\n\\n\" +\n                  f\"Classes with Students ({len(classes_with_students)}):\\n\" +\n                  f\"- {', '.join(classes_with_students)}\\n\\n\" +\n                  f\"Classes without Students ({len(classes_without_students)}):\\n\" +\n                  f\"- {', '.join(classes_without_students)}\\n\\n\" +\n                  f\"Classes with Mismatched Students ({len(classes_with_mismatches)}):\\n\" +\n                  f\"- {', '.join([c[0] for c in classes_with_mismatches])}\")\n    \n        if mismatched_summary:\n            summary += f\"\\n\\nDETAILED MISMATCHES:{mismatched_summary}\"\n    \n        allure.attach(summary, name=\"Test Summary\", attachment_type=allure.attachment_type.TEXT)\n    \n        class_filter_page.page.screenshot(path=\"reports/screenshots/test_complete.png\")\n    \n        assert not classes_with_mismatches, \"Found classes with mismatched students\"\n>       assert len(classes_tested) > 0, \"No classes were tested\"\nE       AssertionError: No classes were tested\nE       assert 0 > 0\nE        +  where 0 = len([])\n\ntests\\acces\\test_class_filters.py:71: AssertionError"}, "description": "Test filtering students by all available class levels", "attachments": [{"name": "Test Summary", "source": "83f0dc53-9255-446c-9738-cd0597dd5fe6-attachment.txt", "type": "text/plain"}], "start": 1747758474288, "stop": 1747758516583, "uuid": "99d6d65e-e08a-468a-b14a-8f6e6c432326", "historyId": "3da7e31da9be5c62f5a4ef8d202e69e7", "testCaseId": "3da7e31da9be5c62f5a4ef8d202e69e7", "fullName": "tests.acces.test_class_filters#test_all_classes_filter", "labels": [{"name": "feature", "value": "Student Management"}, {"name": "story", "value": "Class Filtering"}, {"name": "parentSuite", "value": "tests.acces"}, {"name": "suite", "value": "test_class_filters"}, {"name": "host", "value": "DESKTOP-LKP4IQM"}, {"name": "thread", "value": "16448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.acces.test_class_filters"}]}