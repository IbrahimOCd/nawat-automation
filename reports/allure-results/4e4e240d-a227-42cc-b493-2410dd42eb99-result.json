{"name": "test_enrolled_students_visible", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.TimeoutError: Timeout 10000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\"xpath=//div[contains(@class,'o_home_menu')]\") to be visible\n============================================================", "trace": "browser = <Browser type=<BrowserType name=chromium executable_path=C:\\Users\\lenovo\\AppData\\Local\\ms-playwright\\chromium-1060\\chrome-win\\chrome.exe> version=113.0.5672.53>\nconfig = {'base_url': 'https://dev.nawat.ma', 'headless': False, 'password': '1@ayouris2', 'username': 'ecole.e2a'}\nstorage_state_path = 'C:\\\\Users\\\\lenovo\\\\Desktop\\\\nawat-automation-master\\\\auth_state.json'\n\n    @pytest.fixture(scope=\"session\")\n    def authenticated_context(browser, config, storage_state_path):\n        # Check if we already have saved authentication state\n        if os.path.exists(storage_state_path):\n            # Create context with existing auth state\n            context = browser.new_context(\n                storage_state=storage_state_path,\n                viewport={\"width\": 1366, \"height\": 768},\n                ignore_https_errors=True\n            )\n            yield context\n            context.close()\n            return\n    \n        # No saved auth state, perform login\n        context = browser.new_context(\n            viewport={\"width\": 1366, \"height\": 768},\n            ignore_https_errors=True\n        )\n    \n        page = context.new_page()\n        page.goto(f\"{config.get('base_url', 'https://dev.nawat.ma')}/web/login\", wait_until=\"domcontentloaded\")\n    \n        # Fast direct login without page objects\n        page.fill(\"input[name='login']\", config.get(\"username\", \"ecole.e2a\"))\n        page.fill(\"input[name='password']\", config.get(\"password\", \"1@ayouris2\"))\n        page.click(\"button[type='submit']\")\n    \n        # Wait for login to complete\n>       page.wait_for_selector(\"//div[contains(@class,'o_home_menu')]\", timeout=10000)\n\nconftest.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:8286: in wait_for_selector\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_page.py:368: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:322: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:461: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x00000258D1951ED0>\nmethod = 'waitForSelector'\nparams = {'selector': \"//div[contains(@class,'o_home_menu')]\", 'timeout': 10000}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 10000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for locator(\"xpath=//div[contains(@class,'o_home_menu')]\") to be visible\nE       ============================================================\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:96: TimeoutError"}, "description": "Test that enrolled students are visible and marked correctly across all pages", "start": 1747665204805, "stop": 1747665204805, "uuid": "bc00adf4-2026-4b54-b2f8-b0a7b7525875", "historyId": "faef8ea1c72d06d7ef02aa0779db36f0", "testCaseId": "faef8ea1c72d06d7ef02aa0779db36f0", "fullName": "tests.acces.test_student_inscrit#test_enrolled_students_visible", "labels": [{"name": "feature", "value": "Student Enrollment"}, {"name": "story", "value": "Enrolled Students"}, {"name": "parentSuite", "value": "tests.acces"}, {"name": "suite", "value": "test_student_inscrit"}, {"name": "host", "value": "DESKTOP-LKP4IQM"}, {"name": "thread", "value": "16192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.acces.test_student_inscrit"}]}