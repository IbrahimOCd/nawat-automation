{"name": "test_invalid_login[ar]", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\ntaking page screenshot\n============================================================", "trace": "page = <Page url='https://dev.nawat.ma/fr/web/login'>, language_code = 'ar'\n\n    @allure.feature(\"Login\")\n    @allure.story(\"Invalid Login\")\n    @pytest.mark.parametrize(\"language_code\", [\"en\", \"fr\", \"ar\"])\n    def test_invalid_login(page, language_code):\n        \"\"\"Test login with invalid credentials\"\"\"\n        with allure.step(\"Load test user data\"):\n            # Load test users\n            test_users = load_test_users()\n            invalid_user = test_users[\"invalid_users\"][0]  # Use first invalid user\n            allure.attach(f\"Using invalid credentials: {invalid_user['description']}\", name=\"Test Data\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Navigate to login page\"):\n            login_page = LoginPage(page)\n            login_page.navigate()\n    \n            # Take screenshot and attach to Allure\n            screenshot_path = f\"reports/screenshots/login_page_invalid_{language_code}.png\"\n            os.makedirs(os.path.dirname(screenshot_path), exist_ok=True)\n>           page.screenshot(path=screenshot_path)\n\ntests\\test_login.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:9991: in screenshot\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_page.py:676: in screenshot\n    encoded_binary = await self._channel.send(\"screenshot\", params)\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:461: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x0000019BBFC7A050>\nmethod = 'screenshot', params = {}, return_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       taking page screenshot\nE       ============================================================\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:96: TimeoutError"}, "description": "Test login with invalid credentials", "steps": [{"name": "Load test user data", "status": "passed", "attachments": [{"name": "Test Data", "source": "d7a15ac8-d47c-4046-91bd-a3b2740679e9-attachment.txt", "type": "text/plain"}], "start": 1747991033929, "stop": 1747991033932}, {"name": "Navigate to login page", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\ntaking page screenshot\n============================================================\n", "trace": "  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\tests\\test_login.py\", line 83, in test_invalid_login\n    page.screenshot(path=screenshot_path)\n  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\venv\\lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 9991, in screenshot\n    self._sync(\n  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\venv\\lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 104, in _sync\n    return task.result()\n  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\venv\\lib\\site-packages\\playwright\\_impl\\_page.py\", line 676, in screenshot\n    encoded_binary = await self._channel.send(\"screenshot\", params)\n  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py\", line 461, in wrap_api_call\n    return await cb()\n  File \"C:\\Users\\lenovo\\Desktop\\nawat-automation-master\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py\", line 96, in inner_send\n    result = next(iter(done)).result()\n"}, "start": 1747991033932, "stop": 1747991065750}], "attachments": [{"name": "stdout", "source": "0c7bcd41-e428-443a-99bc-5111453c8fab-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "language_code", "value": "'ar'"}], "start": 1747991033929, "stop": 1747991065752, "uuid": "bf1b71be-9893-4d27-9b7c-919bf5fe7f6c", "historyId": "96ecfd8a220be0320d87eddcb8b88d73", "testCaseId": "6485cd1aa206d185bd707f422a9a9238", "fullName": "tests.test_login#test_invalid_login", "labels": [{"name": "feature", "value": "Login"}, {"name": "story", "value": "Invalid Login"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-LKP4IQM"}, {"name": "thread", "value": "31536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}