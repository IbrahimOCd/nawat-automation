{"name": "test_all_classes_filter", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.TimeoutError: Timeout 1000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\"xpath=//button[@title='Espace de travail']\") to be visible\n============================================================", "trace": "logged_in_page = <Page url='https://dev.nawat.ma/web#action=405&model=acces.statut.apprenant&view_type=kanban&cids=1&menu_id=106'>\n\n    @pytest.fixture\n    def class_filter_page(logged_in_page):\n        \"\"\"Setup the class filter page after login\"\"\"\n        class_filter_page = ClassFilterPage(logged_in_page)\n>       class_filter_page.navigate_from_login()\n\ntests\\acces\\test_class_filters.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\access\\school_card\\class_filter_page.py:32: in navigate_from_login\n    self.click_with_retry(self.WORKSPACE_BUTTON)\npages\\base_page.py:75: in click_with_retry\n    raise e\npages\\base_page.py:64: in click_with_retry\n    self.page.wait_for_selector(selector, state=\"visible\", timeout=timeout)\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:8286: in wait_for_selector\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_page.py:368: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:322: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:461: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x000001C6EDF43CD0>\nmethod = 'waitForSelector'\nparams = {'selector': \"//button[@title='Espace de travail']\", 'state': 'visible', 'timeout': 1000}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 1000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for locator(\"xpath=//button[@title='Espace de travail']\") to be visible\nE       ============================================================\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:96: TimeoutError"}, "description": "Test filtering students by all available class levels", "start": 1747388337783, "stop": 1747388337783, "uuid": "08a5d46e-3c92-4ed3-a0b4-c10b8f2cec9b", "historyId": "3da7e31da9be5c62f5a4ef8d202e69e7", "testCaseId": "3da7e31da9be5c62f5a4ef8d202e69e7", "fullName": "tests.acces.test_class_filters#test_all_classes_filter", "labels": [{"name": "feature", "value": "Student Management"}, {"name": "story", "value": "Class Filtering"}, {"name": "parentSuite", "value": "tests.acces"}, {"name": "suite", "value": "test_class_filters"}, {"name": "host", "value": "DESKTOP-LKP4IQM"}, {"name": "thread", "value": "17556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.acces.test_class_filters"}]}